# Generated by Django 5.2.1 on 2025-05-26 04:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ObjectTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=50, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Object Types',
                'verbose_name_plural': 'Object Types',
            },
        ),
        migrations.CreateModel(
            name='OwnerTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Owner Types',
                'verbose_name_plural': 'Owner Types',
            },
        ),
        migrations.CreateModel(
            name='Objects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
                ('object_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.objecttypes')),
            ],
            options={
                'verbose_name': 'Objects',
                'verbose_name_plural': 'Objects',
            },
        ),
        migrations.CreateModel(
            name='Owners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_name', models.CharField(max_length=50, verbose_name='name')),
                ('assigned_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_objects', to='catalog.objects')),
                ('owner_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.ownertypes')),
            ],
            options={
                'verbose_name': 'Owners',
                'verbose_name_plural': 'Owners',
            },
        ),
        migrations.CreateModel(
            name='Relationships',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parents', to='catalog.objects')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children', to='catalog.objects')),
            ],
            options={
                'verbose_name': 'Relationships',
                'verbose_name_plural': 'Relationships',
            },
        ),
        migrations.CreateModel(
            name='Columns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column_name', models.CharField(max_length=50, verbose_name='name')),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('data_type', models.CharField(max_length=50, verbose_name='type')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.objects')),
            ],
            options={
                'verbose_name': 'Columns',
                'verbose_name_plural': 'Columns',
                'constraints': [models.UniqueConstraint(fields=('parent', 'column_name'), name='unique_object_column_names')],
            },
        ),
        migrations.AddConstraint(
            model_name='objects',
            constraint=models.UniqueConstraint(fields=('object_type', 'object_name'), name='unique_object'),
        ),
        migrations.AddConstraint(
            model_name='relationships',
            constraint=models.UniqueConstraint(fields=('parent', 'child'), name='unique_relationship'),
        ),
        migrations.AddConstraint(
            model_name='relationships',
            constraint=models.CheckConstraint(condition=models.Q(('parent', models.F('child')), _negated=True), name='parent_not_child'),
        ),
    ]
